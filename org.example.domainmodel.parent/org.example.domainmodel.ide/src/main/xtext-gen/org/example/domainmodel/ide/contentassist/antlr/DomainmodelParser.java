/*
 * generated by Xtext 2.10.0
 */
package org.example.domainmodel.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.example.domainmodel.ide.contentassist.antlr.internal.InternalDomainmodelParser;
import org.example.domainmodel.services.DomainmodelGrammarAccess;

public class DomainmodelParser extends AbstractContentAssistParser {

	@Inject
	private DomainmodelGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalDomainmodelParser createParser() {
		InternalDomainmodelParser result = new InternalDomainmodelParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getDomainmodelAccess().getGroup(), "rule__Domainmodel__Group__0");
					put(grammarAccess.getBlogAccess().getGroup(), "rule__Blog__Group__0");
					put(grammarAccess.getArticlesAccess().getGroup(), "rule__Articles__Group__0");
					put(grammarAccess.getFeatureAccess().getGroup(), "rule__Feature__Group__0");
					put(grammarAccess.getFeatureAccess().getGroup_2(), "rule__Feature__Group_2__0");
					put(grammarAccess.getFeatureAccess().getGroup_3(), "rule__Feature__Group_3__0");
					put(grammarAccess.getFeatureAccess().getGroup_3_3(), "rule__Feature__Group_3_3__0");
					put(grammarAccess.getFeatureAccess().getGroup_3_3_1(), "rule__Feature__Group_3_3_1__0");
					put(grammarAccess.getTagAccess().getGroup(), "rule__Tag__Group__0");
					put(grammarAccess.getDomainmodelAccess().getElementsAssignment_0(), "rule__Domainmodel__ElementsAssignment_0");
					put(grammarAccess.getDomainmodelAccess().getElementsAssignment_1(), "rule__Domainmodel__ElementsAssignment_1");
					put(grammarAccess.getTypeAccess().getBlogAssignment_0(), "rule__Type__BlogAssignment_0");
					put(grammarAccess.getTypeAccess().getArticlesAssignment_1(), "rule__Type__ArticlesAssignment_1");
					put(grammarAccess.getTypeAccess().getCommentAssignment_2(), "rule__Type__CommentAssignment_2");
					put(grammarAccess.getBlogAccess().getNameAssignment_0(), "rule__Blog__NameAssignment_0");
					put(grammarAccess.getBlogAccess().getFeatureAssignment_2(), "rule__Blog__FeatureAssignment_2");
					put(grammarAccess.getArticlesAccess().getNameAssignment_0(), "rule__Articles__NameAssignment_0");
					put(grammarAccess.getArticlesAccess().getFeatureAssignment_2(), "rule__Articles__FeatureAssignment_2");
					put(grammarAccess.getFeatureAccess().getNameAssignment_1(), "rule__Feature__NameAssignment_1");
					put(grammarAccess.getFeatureAccess().getDateAssignment_2_2(), "rule__Feature__DateAssignment_2_2");
					put(grammarAccess.getFeatureAccess().getTag0Assignment_3_3_0(), "rule__Feature__Tag0Assignment_3_3_0");
					put(grammarAccess.getFeatureAccess().getTag1Assignment_3_3_1_1(), "rule__Feature__Tag1Assignment_3_3_1_1");
					put(grammarAccess.getTagAccess().getNameAssignment_1(), "rule__Tag__NameAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalDomainmodelParser typedParser = (InternalDomainmodelParser) parser;
			typedParser.entryRuleDomainmodel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public DomainmodelGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(DomainmodelGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
